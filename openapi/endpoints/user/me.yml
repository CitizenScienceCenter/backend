paths:
  me:
    delete:
      operationId: delete_user
      responses:
        200:
          description: 'User deleted'
        401:
          description: 'Not authorised'
        404:
          description: 'User not found'
      security:
        - apiKeyHeader: []
      summary: 'Delete user (only allowed by the user themselves)'
      tags:
        - Users
      x-openapi-router-controller: api.user.model
    get:
      operationId: get_user
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: ../../schemas.yaml#/components/schemas/User
          description: 'Return user'
        404:
          description: 'User not found'
      security:
        - apiKeyHeader: []
      summary: 'Get logged in user'
      tags:
        - Users
      x-openapi-router-controller: api.user.model
    put:
      operationId: update_user
      parameters:
        - description: 'The unique identifer for a User'
          in: path
          name: id
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]+$
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: ../../schemas.yaml#/components/schemas/User
          description: 'User updated'
        404:
          description: 'User not found'
      security:
        - apiKeyHeader: []
      summary: 'Update user details (change password, add details etc)'
      tags:
        - Users
      x-openapi-router-controller: api.user.model
